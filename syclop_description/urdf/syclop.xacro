<?xml version="1.0"?>
<robot name="syclop" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Constants for robot dimensions-->
  <xacro:property name="base_mass" value="1" /> <!-- arbitrary value for mass -->
  <xacro:property name="base_width" value="0.5" /> 
  <xacro:property name="base_height" value="0.05" /> 
  <xacro:property name="base_depth" value="0.3" />
  <xacro:property name="pan_base_mass" value="1" /> <!-- arbitrary value for mass -->
  <xacro:property name="pan_base_width" value="0.48" /> 
  <xacro:property name="pan_base_height" value="0.20" /> 
  <xacro:property name="pan_base_depth" value="0.15" />
  <xacro:property name="pan_arm_mass" value="1" /> <!-- arbitrary value for mass -->
  <!--<xacro:property name="pan_arm_width" value="0.48" />-->
  <xacro:property name="pan_arm_height" value="0.1" /> 
  <xacro:property name="pan_arm_depth" value="0.15" />
  <xacro:property name="tilt_arm_mass" value="1" /> <!-- arbitrary value for mass -->
  <xacro:property name="tilt_arm_width" value="0.08" /> 
  <!--<xacro:property name="tilt_arm_height" value="0.3" /> -->
  <xacro:property name="tilt_arm_depth" value="0.15" />
  <xacro:property name="camera_link" value="0.3" /> <!-- Size of square 'camera' box -->
  <xacro:property name="axel_offset" value="0.025" /> <!-- Space btw top of bottom link and each joint -->

  <xacro:property name="pan_arm_width" value="${camera_link + tilt_arm_width*2 + axel_offset*2}" />
  <xacro:property name="tilt_arm_height" value="${camera_link + axel_offset*2}" />
  
  <!-- Import all Gazebo-customization elements, including Gazebo colors -->
  <xacro:include filename="$(find syclop)/urdf/syclop.gazebo" />
  <!-- Import Rviz colors -->
  <xacro:include filename="$(find syclop)/urdf/materials.xacro" />

  <!-- Used for fixing robot to Gazebo 'base_link' -->
  <link name="world"/>

  <joint name="fixed" type="fixed">
    <parent link="world"/>
    <child link="base_link"/>
  </joint>

  <!--<pose>0 0 0 0 0 1.59133</pose>-->
  <origin xyz="0 0 0" rpy="0 0 ${pi/2}"/>

  <!-- Base Link -->
  <link name="base_link">
    <collision>
      <origin xyz="0 0 ${base_height/2}" rpy="0 0 0"/>
      <geometry>
	<box size="${base_depth} ${base_width} ${base_height}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 ${base_height/2}" rpy="0 0 0"/>
      <geometry>
	<box size="${base_depth} ${base_width} ${base_height}"/>
      </geometry>
      <material name="white"/>
    </visual>

    <inertial>
      <origin xyz="0 0 ${base_height/2}" rpy="0 0 0"/>
      <mass value="${base_mass}"/>
      <inertia
	  ixx="${base_mass / 12.0 * (base_depth*base_depth + base_height*base_height)}" ixy="0.0" ixz="0.0"
	  iyy="${base_mass / 12.0 * (base_height*base_height + base_width*base_width)}" iyz="0.0"
	  izz="${base_mass / 12.0 * (base_width*base_width + base_depth*base_depth)}"/>
    </inertial>
  </link>

  <!-- Pan Base Link -->
  <link name="pan_base_link">
    <collision>
      <origin xyz="0 0 ${pan_base_height/2}" rpy="0 0 0"/>
      <geometry>
	<box size="${pan_base_depth} ${pan_base_width} ${pan_base_height}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 ${pan_base_height/2}" rpy="0 0 0"/>
      <geometry>
	<box size="${pan_base_depth} ${pan_base_width} ${pan_base_height}"/>
      </geometry>
      <material name="orange"/>
    </visual>

    <inertial>
      <origin xyz="0 0 ${pan_base_height/2}" rpy="0 0 0"/>
      <mass value="${pan_base_mass}"/>
      <inertia
	  ixx="${pan_base_mass / 12.0 * (pan_base_depth*pan_base_depth + pan_base_height*pan_base_height)}" ixy="0.0" ixz="0.0"
	  iyy="${pan_base_mass / 12.0 * (pan_base_height*pan_base_height + pan_base_width*pan_base_width)}" iyz="0.0"
	  izz="${pan_base_mass / 12.0 * (pan_base_width*base_width + pan_base_depth*pan_base_depth)}"/>
    </inertial>
  </link>

  <joint name="base_pan_base_joint" type="fixed">
    <parent link="base_link"/>
    <child link="pan_base_link"/>
    <origin xyz="0 0 ${base_height}" rpy="0 0 0"/>
    <axis xyz="0 0 0"/>
  </joint>

  <!-- Pan Arm Link -->
  <link name="pan_arm_link">
    <collision>
      <origin xyz="0 0 ${pan_arm_height/2}" rpy="0 0 0"/>
      <geometry>
	<box size="${pan_arm_depth} ${pan_arm_width}  ${pan_arm_height}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 ${pan_arm_height/2}" rpy="0 0 0"/>
      <geometry>
	<box size="${pan_arm_depth} ${pan_arm_width} ${pan_arm_height}"/>
      </geometry>
      <material name="cyan"/>
    </visual>

    <inertial>
      <origin xyz="0 0 ${pan_arm_height/2}" rpy="0 0 0"/>
      <mass value="${pan_arm_mass}"/>
      <inertia
	  ixx="${pan_arm_mass / 12.0 * (pan_arm_depth*pan_arm_depth + pan_arm_height*pan_arm_height)}" ixy="0.0" ixz="0.0"
	  iyy="${pan_arm_mass / 12.0 * (pan_arm_height*pan_arm_height + pan_arm_width*pan_arm_width)}" iyz="0.0"
	  izz="${pan_arm_mass / 12.0 * (pan_arm_width*pan_arm_width + pan_arm_depth*pan_arm_depth)}"/>
    </inertial>
  </link>

  <joint name="pan_arm_pan_base_joint" type="revolute">
    <parent link="pan_base_link"/>
    <child link="pan_arm_link"/>
    <origin xyz="0 0 ${base_height+pan_base_height}" rpy="0 0 0"/>
    <axis xyz="0 0 1"/>
    <!--<limit lower="${-pi/2}" upper="${pi/2}" effort = "1" velocity = "10"/>-->
    <limit lower="${-pi/2}" upper="${pi/2}" effort = "1" velocity = "50"/>
    <!--<limit lower="-1.0" upper="1.0" effort = "1" velocity = "50"/>-->
  </joint>

<!-- tilt Arm Link -->
  <link name="tilt_arm_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
	<box size="${tilt_arm_depth} ${tilt_arm_width} ${tilt_arm_height}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
	<box size="${tilt_arm_depth} ${tilt_arm_width} ${tilt_arm_height}"/>
      </geometry>
      <material name="cyan"/>
    </visual>

    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="${tilt_arm_mass}"/>
      <inertia
	  ixx="${tilt_arm_mass / 12.0 * (tilt_arm_depth*tilt_arm_depth + tilt_arm_height*tilt_arm_height)}" ixy="0.0" ixz="0.0"
	  iyy="${tilt_arm_mass / 12.0 * (tilt_arm_height*tilt_arm_height + tilt_arm_width*tilt_arm_width)}" iyz="0.0"
	  izz="${tilt_arm_mass / 12.0 * (tilt_arm_width*tilt_arm_width + tilt_arm_depth*tilt_arm_depth)}"/>
    </inertial>
  </link>

  <joint name="pan_arm_tilt_arm_joint" type="fixed">
    <parent link="pan_arm_link"/>
    <child link="tilt_arm_link"/>
    <!--<origin xyz="0 ${-pan_arm_width/2 + tilt_arm_width/2} ${base_height+pan_base_height}" rpy="0 0 0"/>-->
    <origin xyz="0 ${-pan_arm_width/2 + tilt_arm_width/2} ${pan_arm_height + tilt_arm_height/2}" rpy="0 0 0"/>
    <axis xyz="0 0 0"/>
  </joint>

  <!-- Camera -->
  <link name="camera_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
	<box size="${camera_link} ${camera_link} ${camera_link}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 ${camera_link/2 + tilt_arm_width/2 + axel_offset} 0" rpy="0 0 0"/>
      <geometry>
	<box size="${camera_link/2} ${camera_link} ${camera_link}"/>
      </geometry>
      <material name="red"/>
    </visual>

    <visual>
      <origin xyz="0.15 ${camera_link/2 + tilt_arm_width/2 + axel_offset} 0" rpy="${pi/2} 0 ${-pi/2}"/>
      <geometry>
	<cylinder length="0.3" radius="0.1"/>
      </geometry>
      <material name="red"/>
    </visual>

    <inertial>
      <mass value="1.0" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="${1.0 / 12.0 * (2*camera_link*camera_link)}" ixy="0.0" ixz="0.0"
	       iyy="${1.0 / 12.0 * (2*camera_link*camera_link)}" iyz="0.0"
	       izz="${1.0 / 12.0 * (2*camera_link*camera_link)}"/>
    </inertial>
  </link>

  <joint name="camera_joint" type="revolute">
    <axis xyz="0 1 0" />
    <!--<origin xyz="0 0 ${base_height+pan_base_height + pan_arm_height}" rpy="0 0 0"/>-->
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <parent link="tilt_arm_link"/>
    <child link="camera_link"/>
    <limit lower="${-pi}" upper="${pi/4}" effort = "1" velocity = "50"/>
  </joint>

  <!-- generate an optical frame http://www.ros.org/reps/rep-0103.html#suffix-frames
      so that ros and opencv can operate on the camera frame correctly -->
  <joint name="camera_optical_joint" type="fixed">
    <!-- these values have to be these values otherwise the gazebo camera image
        won't be aligned properly with the frame it is supposedly originating from -->
    <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>
    <parent link="camera_link"/>
    <child link="camera_link_optical"/>
  </joint>

  <link name="camera_link_optical">
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </link>

  <transmission name="pan_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="pan_arm_pan_base_joint">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="pan_motor">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <transmission name="tilt_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="camera_joint">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="tilt_motor">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

</robot>
